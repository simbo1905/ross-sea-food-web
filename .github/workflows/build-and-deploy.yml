name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download pre-built tools
        run: |
          # Create .tools directory
          mkdir -p .tools
          
          # Download validate tool
          curl -L -o .tools/validate \
            https://github.com/rrcobb/just-learn-just-game/releases/download/v0.1.0/validate-x86_64-unknown-linux-gnu
          chmod +x .tools/validate
          
          # Download bundle tool
          curl -L -o .tools/bundle \
            https://github.com/rrcobb/just-learn-just-game/releases/download/v0.1.0/bundle-x86_64-unknown-linux-gnu
          chmod +x .tools/bundle

      - name: Validate JSON files
        run: .tools/validate

      - name: Build application
        run: .tools/bundle

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  test-deployment:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Wait for deployment
        run: sleep 30
        
      - name: Test deployed page
        run: |
          # Get the repository name and owner
          REPO_OWNER=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          
          # Construct GitHub Pages URL
          if [ "$REPO_NAME" = "${REPO_OWNER}.github.io" ]; then
            PAGE_URL="https://${REPO_OWNER}.github.io/"
          else
            PAGE_URL="https://${REPO_OWNER}.github.io/${REPO_NAME}/"
          fi
          
          echo "Testing deployment at: $PAGE_URL"
          
          # Test with curl
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$PAGE_URL")
          
          if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "✅ Page deployed successfully! Status: $HTTP_STATUS"
            
            # Check for key content
            if curl -s "$PAGE_URL" | grep -q "Ross Sea Food Web Quiz"; then
              echo "✅ Page title found"
            else
              echo "❌ Page title not found"
              exit 1
            fi
            
            if curl -s "$PAGE_URL" | grep -q "University of Waikato"; then
              echo "✅ Copyright attribution found"
            else
              echo "❌ Copyright attribution not found"
              exit 1
            fi
          else
            echo "❌ Page deployment failed! Status: $HTTP_STATUS"
            exit 1
          fi